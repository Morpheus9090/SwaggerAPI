{
    "openapi": "3.0.0",
    "info": {
        "title": "FakeStore API Documentation",
        "description": "Swagger documentation for FakeStore API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/branch/lists": {
            "get": {
                "tags": [
                    "Branch"
                ],
                "summary": "Get list of branch",
                "operationId": "5c3b289773113cfe5233e00bf043b1fd",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/branch/create": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Create a new branch",
                "operationId": "fab238b34aa9799a27eca85eda3b4ec8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Phnom Penh Branch"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Phnom Penh"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "012345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/branch/update": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Update a branch by ID",
                "description": "Updates a branch with the provided ID, name, location, and contact number.",
                "operationId": "updateBranch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Branch Name"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Siem Reap"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "098765432"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "update_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Branch Name"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "Siem Reap"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "098765432"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:10:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branch not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "resource not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/delete": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Delete a branch by ID",
                "operationId": "49e5060c9700e82eae2a3008497a80bc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/lists": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get list of categories",
                "operationId": "c2a705e24a5f799112cb6f49a5bf645b",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/category/create": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create new category",
                "operationId": "720fa91edfe99b9c6a4b68e1aa33871a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "IT Equipment"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category for all IT-related items"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/category/update": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update an existing category",
                "operationId": "28296eb0f5830c40af4e4afe34227fb7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Category Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated category description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/category/delete": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category by ID",
                "operationId": "e96b7918ddcf600bb3c212c762db9ac0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category deleted successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/invoice/lists": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get list of invoices",
                "operationId": "5ba7189f2306dd78d20d1cfe2288ef23",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/invoice/create": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Create a new invoice",
                "description": "Creates a new invoice record with user ID and total amount.",
                "operationId": "createInvoice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "total"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "total": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.75
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.75
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "string",
                                                    "example": "The user id field is required."
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "The total must be a number."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice/update": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update an existing invoice",
                "description": "Updates an invoice record by given ID with new user ID and total amount.",
                "operationId": "updateInvoice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "user_id",
                                    "total"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "total": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 200.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "update_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 200.5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "resource not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice/delete": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Delete an invoice by ID",
                "description": "Deletes an invoice record by the given ID.",
                "operationId": "deleteInvoice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "delete_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.75
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "resource not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoiceitem/lists": {
            "get": {
                "tags": [
                    "Invoice Item"
                ],
                "summary": "Get list of invoice item",
                "operationId": "b002eb783b1cd999bf8df44f68c2e35a",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/invoiceitem/create": {
            "post": {
                "tags": [
                    "Invoice Item"
                ],
                "summary": "Create a new invoice item",
                "description": "Creates a new invoice item record with invoice ID, product ID, quantity, and price.",
                "operationId": "createInvoiceItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invoice_id",
                                    "product_id",
                                    "qty",
                                    "price"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "qty": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "invoice_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "qty": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 3
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:10:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "properties": {
                                                "invoice_id": {
                                                    "type": "string",
                                                    "example": "The invoice id field is required."
                                                },
                                                "product_id": {
                                                    "type": "string",
                                                    "example": "The product id field is required."
                                                },
                                                "qty": {
                                                    "type": "string",
                                                    "example": "The qty must be a number."
                                                },
                                                "price": {
                                                    "type": "string",
                                                    "example": "The price must be a number."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoiceitem/update": {
            "post": {
                "tags": [
                    "Invoice Item"
                ],
                "summary": "Update an existing invoice item",
                "description": "Updates an invoice item record by given ID with new invoice ID, product ID, quantity, and price.",
                "operationId": "updateInvoiceItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "invoice_id",
                                    "product_id",
                                    "qty",
                                    "price"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "qty": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 250.75
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "update_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "invoice_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "qty": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 250.75
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "resource not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoiceitem/delete": {
            "post": {
                "tags": [
                    "Invoice Item"
                ],
                "summary": "Delete an invoice item by ID",
                "description": "Deletes an invoice item record by the given ID.",
                "operationId": "deleteInvoiceItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "delete_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "invoice_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "qty": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 250.75
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-07T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "resource not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/lists": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Get list of positions",
                "operationId": "7b710137f9db66581b567db1fbdd37ba",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/position/create": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Create a new position",
                "description": "Creates a new position with branch_id, name, and optional description.",
                "operationId": "createPosition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "branch_id",
                                    "name"
                                ],
                                "properties": {
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "IT Officer"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Handles all IT-related tasks",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "IT Officer"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Handles all IT-related tasks"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "properties": {
                                                "branch_id": {
                                                    "type": "string",
                                                    "example": "The branch_id field is required."
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "The name field is required."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/update": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Update a position",
                "description": "Updates an existing position using its ID",
                "operationId": "updatePosition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "branch_id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "IT Supervisor"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Manages IT department",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "update_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "IT Supervisor"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Manages IT department"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:10:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/delete": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Delete a position",
                "description": "Deletes a position by its ID",
                "operationId": "deletePosition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position deleted successfully or not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "delete_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "branch_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "IT Supervisor"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Manages IT department"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:10:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/lists": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get list of product",
                "operationId": "e9f70cb54239abe51de172a6c0db2260",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/product/create": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "operationId": "c514b2e3b3f5bb8eb8137b7ccc94313b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "cost",
                                    "price",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Laptop"
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 750
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "product.jpg"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High-performance laptop"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/product/update": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Update an existing product",
                "operationId": "6b580dcabcb104c1e05c926585d78625",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "cost",
                                    "price",
                                    "category_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Product Name"
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "updated-image.jpg"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description."
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "update_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Product Name"
                                                },
                                                "cost": {
                                                    "type": "number",
                                                    "example": 15
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 25
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "updated-image.jpg"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description."
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/delete": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product by ID",
                "description": "Deletes a product record by given ID.",
                "operationId": "deleteProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product deleted successfully or resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "delete_data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Example Product"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "This is a sample product."
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 29.99
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2025-08-06T12:00:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2025-08-06T12:10:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status_code": {
                                                    "type": "integer",
                                                    "example": 200
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "resource not found"
                                                },
                                                "status_code": {
                                                    "type": "integer",
                                                    "example": 200
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/lists": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Get list of staff",
                "operationId": "ce008e2722c25c88d787c5201c4bf598",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/staff/create": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Create a new staff",
                "description": "Creates a new staff member with all required personal information.",
                "operationId": "createStaff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "position_id",
                                    "name",
                                    "gender",
                                    "date_of_birth",
                                    "place_of_birth",
                                    "address",
                                    "phone",
                                    "nation_id_card"
                                ],
                                "properties": {
                                    "position_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1995-01-01"
                                    },
                                    "place_of_birth": {
                                        "type": "string",
                                        "example": "Phnom Penh"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Street, Phnom Penh"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "012345678"
                                    },
                                    "nation_id_card": {
                                        "type": "string",
                                        "example": "N123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "position_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "Male"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "example": "1995-01-01"
                                                },
                                                "place_of_birth": {
                                                    "type": "string",
                                                    "example": "Phnom Penh"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123 Street, Phnom Penh"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "012345678"
                                                },
                                                "nation_id_card": {
                                                    "type": "string",
                                                    "example": "N123456789"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "The name field is required."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/update": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Update staff information",
                "description": "Updates an existing staff record by ID",
                "operationId": "updateStaff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "position_id",
                                    "name",
                                    "gender",
                                    "date_of_birth",
                                    "place_of_birth",
                                    "address",
                                    "phone",
                                    "nation_id_card"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Female"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-15"
                                    },
                                    "place_of_birth": {
                                        "type": "string",
                                        "example": "Siem Reap"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "456 Main St, Siem Reap"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0987654321"
                                    },
                                    "nation_id_card": {
                                        "type": "string",
                                        "example": "N987654321"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "update_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "position_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "Female"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "example": "1990-05-15"
                                                },
                                                "place_of_birth": {
                                                    "type": "string",
                                                    "example": "Siem Reap"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "456 Main St, Siem Reap"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "0987654321"
                                                },
                                                "nation_id_card": {
                                                    "type": "string",
                                                    "example": "N987654321"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:10:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Staff not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "resource not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/delete": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Delete a staff by ID",
                "description": "Deletes a staff record by given ID.",
                "operationId": "deleteStaff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff deleted successfully or resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "delete_data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "position_id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Jane Doe"
                                                        },
                                                        "gender": {
                                                            "type": "string",
                                                            "example": "Female"
                                                        },
                                                        "date_of_birth": {
                                                            "type": "string",
                                                            "example": "1990-05-15"
                                                        },
                                                        "place_of_birth": {
                                                            "type": "string",
                                                            "example": "Siem Reap"
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "456 Main St, Siem Reap"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "0987654321"
                                                        },
                                                        "nation_id_card": {
                                                            "type": "string",
                                                            "example": "N987654321"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2025-08-06T12:00:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2025-08-06T12:10:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status_code": {
                                                    "type": "integer",
                                                    "example": 200
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "resource not found"
                                                },
                                                "status_code": {
                                                    "type": "integer",
                                                    "example": 200
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/lists": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of user",
                "operationId": "ef7791352cb670715562cec9adeb7873",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/user/create": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "description": "Creates a user with username, password, and linked staff ID.",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "staff_id"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "admin123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "12345678a"
                                    },
                                    "staff_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "example": "admin123"
                                                },
                                                "staff_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-08-06T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "example": "The username field is required."
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "example": "The password must be at least 8 characters."
                                                },
                                                "staff_id": {
                                                    "type": "string",
                                                    "example": "The staff_id field is required."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "description": "Update user details using POST method.",
                "operationId": "postUpdateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "username",
                                    "password",
                                    "staff_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "new_username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "staff_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/user/delete": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Delete user by ID using POST",
                "operationId": "deleteUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Branch",
            "description": "Branch"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "Invoice",
            "description": "Invoice"
        },
        {
            "name": "Invoice Item",
            "description": "Invoice Item"
        },
        {
            "name": "Position",
            "description": "Position"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "Staff",
            "description": "Staff"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}